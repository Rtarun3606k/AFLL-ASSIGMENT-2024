Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     if_statement -> IF LPAREN condition RPAREN block else_block
Rule 3     else_block -> ELSE block
Rule 4     else_block -> empty
Rule 5     while_statement -> WHILE LPAREN condition RPAREN block
Rule 6     do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI
Rule 7     condition -> expression EQ expression
Rule 8     condition -> expression NE expression
Rule 9     condition -> expression LT expression
Rule 10    condition -> expression GT expression
Rule 11    condition -> expression LE expression
Rule 12    condition -> expression GE expression
Rule 13    block -> LBRACE statements RBRACE
Rule 14    statements -> statement statements
Rule 15    statements -> statement
Rule 16    statements -> if_statement statements
Rule 17    statements -> if_statement
Rule 18    statements -> while_statement statements
Rule 19    statements -> while_statement
Rule 20    statements -> do_while_statement statements
Rule 21    statements -> do_while_statement
Rule 22    statement -> expression SEMI
Rule 23    statement -> IDENTIFIER ASSIGN expression SEMI
Rule 24    expression -> IDENTIFIER
Rule 25    expression -> NUMBER
Rule 26    expression -> expression PLUS expression
Rule 27    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 23
DO                   : 6
ELSE                 : 3
EQ                   : 7
GE                   : 12
GT                   : 10
IDENTIFIER           : 23 24
IF                   : 2
LBRACE               : 13
LE                   : 11
LPAREN               : 2 5 6
LT                   : 9
NE                   : 8
NUMBER               : 25
PLUS                 : 26
RBRACE               : 13
RPAREN               : 2 5 6
SEMI                 : 6 22 23
WHILE                : 5 6
error                : 

Nonterminals, with rules where they appear

block                : 2 3 5 6
condition            : 2 5 6
do_while_statement   : 20 21
else_block           : 2
empty                : 4
expression           : 7 7 8 8 9 9 10 10 11 11 12 12 22 23 26 26
if_statement         : 16 17
program              : 0
statement            : 14 15
statements           : 1 13 14 16 18 20
while_statement      : 18 19

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statements -> . if_statement statements
    (17) statements -> . if_statement
    (18) statements -> . while_statement statements
    (19) statements -> . while_statement
    (20) statements -> . do_while_statement statements
    (21) statements -> . do_while_statement
    (22) statement -> . expression SEMI
    (23) statement -> . IDENTIFIER ASSIGN expression SEMI
    (2) if_statement -> . IF LPAREN condition RPAREN block else_block
    (5) while_statement -> . WHILE LPAREN condition RPAREN block
    (6) do_while_statement -> . DO block WHILE LPAREN condition RPAREN SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    NUMBER          shift and go to state 12

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    do_while_statement             shift and go to state 6
    expression                     shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)


state 3

    (14) statements -> statement . statements
    (15) statements -> statement .
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statements -> . if_statement statements
    (17) statements -> . if_statement
    (18) statements -> . while_statement statements
    (19) statements -> . while_statement
    (20) statements -> . do_while_statement statements
    (21) statements -> . do_while_statement
    (22) statement -> . expression SEMI
    (23) statement -> . IDENTIFIER ASSIGN expression SEMI
    (2) if_statement -> . IF LPAREN condition RPAREN block else_block
    (5) while_statement -> . WHILE LPAREN condition RPAREN block
    (6) do_while_statement -> . DO block WHILE LPAREN condition RPAREN SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    $end            reduce using rule 15 (statements -> statement .)
    RBRACE          reduce using rule 15 (statements -> statement .)
    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    NUMBER          shift and go to state 12

    statement                      shift and go to state 3
    statements                     shift and go to state 13
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    do_while_statement             shift and go to state 6
    expression                     shift and go to state 7

state 4

    (16) statements -> if_statement . statements
    (17) statements -> if_statement .
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statements -> . if_statement statements
    (17) statements -> . if_statement
    (18) statements -> . while_statement statements
    (19) statements -> . while_statement
    (20) statements -> . do_while_statement statements
    (21) statements -> . do_while_statement
    (22) statement -> . expression SEMI
    (23) statement -> . IDENTIFIER ASSIGN expression SEMI
    (2) if_statement -> . IF LPAREN condition RPAREN block else_block
    (5) while_statement -> . WHILE LPAREN condition RPAREN block
    (6) do_while_statement -> . DO block WHILE LPAREN condition RPAREN SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    $end            reduce using rule 17 (statements -> if_statement .)
    RBRACE          reduce using rule 17 (statements -> if_statement .)
    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    NUMBER          shift and go to state 12

    if_statement                   shift and go to state 4
    statements                     shift and go to state 14
    statement                      shift and go to state 3
    while_statement                shift and go to state 5
    do_while_statement             shift and go to state 6
    expression                     shift and go to state 7

state 5

    (18) statements -> while_statement . statements
    (19) statements -> while_statement .
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statements -> . if_statement statements
    (17) statements -> . if_statement
    (18) statements -> . while_statement statements
    (19) statements -> . while_statement
    (20) statements -> . do_while_statement statements
    (21) statements -> . do_while_statement
    (22) statement -> . expression SEMI
    (23) statement -> . IDENTIFIER ASSIGN expression SEMI
    (2) if_statement -> . IF LPAREN condition RPAREN block else_block
    (5) while_statement -> . WHILE LPAREN condition RPAREN block
    (6) do_while_statement -> . DO block WHILE LPAREN condition RPAREN SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    $end            reduce using rule 19 (statements -> while_statement .)
    RBRACE          reduce using rule 19 (statements -> while_statement .)
    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    NUMBER          shift and go to state 12

    while_statement                shift and go to state 5
    statements                     shift and go to state 15
    statement                      shift and go to state 3
    if_statement                   shift and go to state 4
    do_while_statement             shift and go to state 6
    expression                     shift and go to state 7

state 6

    (20) statements -> do_while_statement . statements
    (21) statements -> do_while_statement .
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statements -> . if_statement statements
    (17) statements -> . if_statement
    (18) statements -> . while_statement statements
    (19) statements -> . while_statement
    (20) statements -> . do_while_statement statements
    (21) statements -> . do_while_statement
    (22) statement -> . expression SEMI
    (23) statement -> . IDENTIFIER ASSIGN expression SEMI
    (2) if_statement -> . IF LPAREN condition RPAREN block else_block
    (5) while_statement -> . WHILE LPAREN condition RPAREN block
    (6) do_while_statement -> . DO block WHILE LPAREN condition RPAREN SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    $end            reduce using rule 21 (statements -> do_while_statement .)
    RBRACE          reduce using rule 21 (statements -> do_while_statement .)
    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    NUMBER          shift and go to state 12

    do_while_statement             shift and go to state 6
    statements                     shift and go to state 16
    statement                      shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    expression                     shift and go to state 7

state 7

    (22) statement -> expression . SEMI
    (26) expression -> expression . PLUS expression

    SEMI            shift and go to state 17
    PLUS            shift and go to state 18


state 8

    (23) statement -> IDENTIFIER . ASSIGN expression SEMI
    (24) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 19
    SEMI            reduce using rule 24 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 24 (expression -> IDENTIFIER .)


state 9

    (2) if_statement -> IF . LPAREN condition RPAREN block else_block

    LPAREN          shift and go to state 20


state 10

    (5) while_statement -> WHILE . LPAREN condition RPAREN block

    LPAREN          shift and go to state 21


state 11

    (6) do_while_statement -> DO . block WHILE LPAREN condition RPAREN SEMI
    (13) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 22

state 12

    (25) expression -> NUMBER .

    SEMI            reduce using rule 25 (expression -> NUMBER .)
    PLUS            reduce using rule 25 (expression -> NUMBER .)
    EQ              reduce using rule 25 (expression -> NUMBER .)
    NE              reduce using rule 25 (expression -> NUMBER .)
    LT              reduce using rule 25 (expression -> NUMBER .)
    GT              reduce using rule 25 (expression -> NUMBER .)
    LE              reduce using rule 25 (expression -> NUMBER .)
    GE              reduce using rule 25 (expression -> NUMBER .)
    RPAREN          reduce using rule 25 (expression -> NUMBER .)


state 13

    (14) statements -> statement statements .

    $end            reduce using rule 14 (statements -> statement statements .)
    RBRACE          reduce using rule 14 (statements -> statement statements .)


state 14

    (16) statements -> if_statement statements .

    $end            reduce using rule 16 (statements -> if_statement statements .)
    RBRACE          reduce using rule 16 (statements -> if_statement statements .)


state 15

    (18) statements -> while_statement statements .

    $end            reduce using rule 18 (statements -> while_statement statements .)
    RBRACE          reduce using rule 18 (statements -> while_statement statements .)


state 16

    (20) statements -> do_while_statement statements .

    $end            reduce using rule 20 (statements -> do_while_statement statements .)
    RBRACE          reduce using rule 20 (statements -> do_while_statement statements .)


state 17

    (22) statement -> expression SEMI .

    IDENTIFIER      reduce using rule 22 (statement -> expression SEMI .)
    IF              reduce using rule 22 (statement -> expression SEMI .)
    WHILE           reduce using rule 22 (statement -> expression SEMI .)
    DO              reduce using rule 22 (statement -> expression SEMI .)
    NUMBER          reduce using rule 22 (statement -> expression SEMI .)
    $end            reduce using rule 22 (statement -> expression SEMI .)
    RBRACE          reduce using rule 22 (statement -> expression SEMI .)


state 18

    (26) expression -> expression PLUS . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 24

state 19

    (23) statement -> IDENTIFIER ASSIGN . expression SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 26

state 20

    (2) if_statement -> IF LPAREN . condition RPAREN block else_block
    (7) condition -> . expression EQ expression
    (8) condition -> . expression NE expression
    (9) condition -> . expression LT expression
    (10) condition -> . expression GT expression
    (11) condition -> . expression LE expression
    (12) condition -> . expression GE expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    condition                      shift and go to state 27
    expression                     shift and go to state 28

state 21

    (5) while_statement -> WHILE LPAREN . condition RPAREN block
    (7) condition -> . expression EQ expression
    (8) condition -> . expression NE expression
    (9) condition -> . expression LT expression
    (10) condition -> . expression GT expression
    (11) condition -> . expression LE expression
    (12) condition -> . expression GE expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    condition                      shift and go to state 29
    expression                     shift and go to state 28

state 22

    (6) do_while_statement -> DO block . WHILE LPAREN condition RPAREN SEMI

    WHILE           shift and go to state 30


state 23

    (13) block -> LBRACE . statements RBRACE
    (14) statements -> . statement statements
    (15) statements -> . statement
    (16) statements -> . if_statement statements
    (17) statements -> . if_statement
    (18) statements -> . while_statement statements
    (19) statements -> . while_statement
    (20) statements -> . do_while_statement statements
    (21) statements -> . do_while_statement
    (22) statement -> . expression SEMI
    (23) statement -> . IDENTIFIER ASSIGN expression SEMI
    (2) if_statement -> . IF LPAREN condition RPAREN block else_block
    (5) while_statement -> . WHILE LPAREN condition RPAREN block
    (6) do_while_statement -> . DO block WHILE LPAREN condition RPAREN SEMI
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    NUMBER          shift and go to state 12

    statements                     shift and go to state 31
    statement                      shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    do_while_statement             shift and go to state 6
    expression                     shift and go to state 7

state 24

    (26) expression -> expression PLUS expression .
    (26) expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    SEMI            reduce using rule 26 (expression -> expression PLUS expression .)
    EQ              reduce using rule 26 (expression -> expression PLUS expression .)
    NE              reduce using rule 26 (expression -> expression PLUS expression .)
    LT              reduce using rule 26 (expression -> expression PLUS expression .)
    GT              reduce using rule 26 (expression -> expression PLUS expression .)
    LE              reduce using rule 26 (expression -> expression PLUS expression .)
    GE              reduce using rule 26 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 18

  ! PLUS            [ reduce using rule 26 (expression -> expression PLUS expression .) ]


state 25

    (24) expression -> IDENTIFIER .

    PLUS            reduce using rule 24 (expression -> IDENTIFIER .)
    SEMI            reduce using rule 24 (expression -> IDENTIFIER .)
    EQ              reduce using rule 24 (expression -> IDENTIFIER .)
    NE              reduce using rule 24 (expression -> IDENTIFIER .)
    LT              reduce using rule 24 (expression -> IDENTIFIER .)
    GT              reduce using rule 24 (expression -> IDENTIFIER .)
    LE              reduce using rule 24 (expression -> IDENTIFIER .)
    GE              reduce using rule 24 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 24 (expression -> IDENTIFIER .)


state 26

    (23) statement -> IDENTIFIER ASSIGN expression . SEMI
    (26) expression -> expression . PLUS expression

    SEMI            shift and go to state 32
    PLUS            shift and go to state 18


state 27

    (2) if_statement -> IF LPAREN condition . RPAREN block else_block

    RPAREN          shift and go to state 33


state 28

    (7) condition -> expression . EQ expression
    (8) condition -> expression . NE expression
    (9) condition -> expression . LT expression
    (10) condition -> expression . GT expression
    (11) condition -> expression . LE expression
    (12) condition -> expression . GE expression
    (26) expression -> expression . PLUS expression

    EQ              shift and go to state 34
    NE              shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LE              shift and go to state 38
    GE              shift and go to state 39
    PLUS            shift and go to state 18


state 29

    (5) while_statement -> WHILE LPAREN condition . RPAREN block

    RPAREN          shift and go to state 40


state 30

    (6) do_while_statement -> DO block WHILE . LPAREN condition RPAREN SEMI

    LPAREN          shift and go to state 41


state 31

    (13) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 42


state 32

    (23) statement -> IDENTIFIER ASSIGN expression SEMI .

    IDENTIFIER      reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)
    IF              reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)
    WHILE           reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)
    DO              reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)
    NUMBER          reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)
    $end            reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)
    RBRACE          reduce using rule 23 (statement -> IDENTIFIER ASSIGN expression SEMI .)


state 33

    (2) if_statement -> IF LPAREN condition RPAREN . block else_block
    (13) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 43

state 34

    (7) condition -> expression EQ . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 44

state 35

    (8) condition -> expression NE . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 45

state 36

    (9) condition -> expression LT . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 46

state 37

    (10) condition -> expression GT . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 47

state 38

    (11) condition -> expression LE . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 48

state 39

    (12) condition -> expression GE . expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    expression                     shift and go to state 49

state 40

    (5) while_statement -> WHILE LPAREN condition RPAREN . block
    (13) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 50

state 41

    (6) do_while_statement -> DO block WHILE LPAREN . condition RPAREN SEMI
    (7) condition -> . expression EQ expression
    (8) condition -> . expression NE expression
    (9) condition -> . expression LT expression
    (10) condition -> . expression GT expression
    (11) condition -> . expression LE expression
    (12) condition -> . expression GE expression
    (24) expression -> . IDENTIFIER
    (25) expression -> . NUMBER
    (26) expression -> . expression PLUS expression

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 12

    condition                      shift and go to state 51
    expression                     shift and go to state 28

state 42

    (13) block -> LBRACE statements RBRACE .

    WHILE           reduce using rule 13 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 13 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 13 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 13 (block -> LBRACE statements RBRACE .)
    DO              reduce using rule 13 (block -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 13 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 13 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 13 (block -> LBRACE statements RBRACE .)


state 43

    (2) if_statement -> IF LPAREN condition RPAREN block . else_block
    (3) else_block -> . ELSE block
    (4) else_block -> . empty
    (27) empty -> .

    ELSE            shift and go to state 53
    IDENTIFIER      reduce using rule 27 (empty -> .)
    IF              reduce using rule 27 (empty -> .)
    WHILE           reduce using rule 27 (empty -> .)
    DO              reduce using rule 27 (empty -> .)
    NUMBER          reduce using rule 27 (empty -> .)
    $end            reduce using rule 27 (empty -> .)
    RBRACE          reduce using rule 27 (empty -> .)

    else_block                     shift and go to state 52
    empty                          shift and go to state 54

state 44

    (7) condition -> expression EQ expression .
    (26) expression -> expression . PLUS expression

    RPAREN          reduce using rule 7 (condition -> expression EQ expression .)
    PLUS            shift and go to state 18


state 45

    (8) condition -> expression NE expression .
    (26) expression -> expression . PLUS expression

    RPAREN          reduce using rule 8 (condition -> expression NE expression .)
    PLUS            shift and go to state 18


state 46

    (9) condition -> expression LT expression .
    (26) expression -> expression . PLUS expression

    RPAREN          reduce using rule 9 (condition -> expression LT expression .)
    PLUS            shift and go to state 18


state 47

    (10) condition -> expression GT expression .
    (26) expression -> expression . PLUS expression

    RPAREN          reduce using rule 10 (condition -> expression GT expression .)
    PLUS            shift and go to state 18


state 48

    (11) condition -> expression LE expression .
    (26) expression -> expression . PLUS expression

    RPAREN          reduce using rule 11 (condition -> expression LE expression .)
    PLUS            shift and go to state 18


state 49

    (12) condition -> expression GE expression .
    (26) expression -> expression . PLUS expression

    RPAREN          reduce using rule 12 (condition -> expression GE expression .)
    PLUS            shift and go to state 18


state 50

    (5) while_statement -> WHILE LPAREN condition RPAREN block .

    IDENTIFIER      reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)
    IF              reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)
    WHILE           reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)
    DO              reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)
    NUMBER          reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)
    $end            reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)
    RBRACE          reduce using rule 5 (while_statement -> WHILE LPAREN condition RPAREN block .)


state 51

    (6) do_while_statement -> DO block WHILE LPAREN condition . RPAREN SEMI

    RPAREN          shift and go to state 55


state 52

    (2) if_statement -> IF LPAREN condition RPAREN block else_block .

    IDENTIFIER      reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)
    IF              reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)
    WHILE           reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)
    DO              reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)
    NUMBER          reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)
    $end            reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)
    RBRACE          reduce using rule 2 (if_statement -> IF LPAREN condition RPAREN block else_block .)


state 53

    (3) else_block -> ELSE . block
    (13) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 56

state 54

    (4) else_block -> empty .

    IDENTIFIER      reduce using rule 4 (else_block -> empty .)
    IF              reduce using rule 4 (else_block -> empty .)
    WHILE           reduce using rule 4 (else_block -> empty .)
    DO              reduce using rule 4 (else_block -> empty .)
    NUMBER          reduce using rule 4 (else_block -> empty .)
    $end            reduce using rule 4 (else_block -> empty .)
    RBRACE          reduce using rule 4 (else_block -> empty .)


state 55

    (6) do_while_statement -> DO block WHILE LPAREN condition RPAREN . SEMI

    SEMI            shift and go to state 57


state 56

    (3) else_block -> ELSE block .

    IDENTIFIER      reduce using rule 3 (else_block -> ELSE block .)
    IF              reduce using rule 3 (else_block -> ELSE block .)
    WHILE           reduce using rule 3 (else_block -> ELSE block .)
    DO              reduce using rule 3 (else_block -> ELSE block .)
    NUMBER          reduce using rule 3 (else_block -> ELSE block .)
    $end            reduce using rule 3 (else_block -> ELSE block .)
    RBRACE          reduce using rule 3 (else_block -> ELSE block .)


state 57

    (6) do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .

    IDENTIFIER      reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)
    IF              reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)
    WHILE           reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)
    DO              reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)
    NUMBER          reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)
    $end            reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)
    RBRACE          reduce using rule 6 (do_while_statement -> DO block WHILE LPAREN condition RPAREN SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
